Terminals unused in grammar

   DOTSAT
   PTXHEADER
   ELFHEADER
   INFOARCHVERSION
   INFOCODEVERSION_HEADER
   INFOCODEVERSION
   INFOPRODUCER
   INFOHOST
   INFOCOMPILESIZE_HEADER
   INFOCOMPILESIZE
   INFOIDENTIFIER


Grammar

    0 $accept: program $end

    1 program: program sassCode
    2        | sassCode

    3 sassCode: VERSIONHEADER IDENTIFIER NEWLINE functionList
    4         | NEWLINE VERSIONHEADER IDENTIFIER NEWLINE functionList
    5         | VERSIONHEADER IDENTIFIER NEWLINE

    6 functionList: functionList function
    7             | function

    8 $@1: %empty

    9 function: FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE

   10 statementList: statementList statement NEWLINE
   11              | statementList statement SEMICOLON NEWLINE
   12              | statement NEWLINE
   13              | statement SEMICOLON NEWLINE
   14              | NEWLINE

   15 $@2: %empty

   16 statement: $@2 instructionLabel statementend

   17 statementend: instructionHex assemblyInstruction
   18             | %empty

   19 instructionHex: INSTHEX

   20 instructionLabel: LABELSTART LABEL LABELEND

   21 assemblyInstruction: baseInstruction modifierList operandList

   22 baseInstruction: simpleInstructions
   23                | branchInstructions
   24                | GRED DOT simpleInstructions
   25                | GATOM DOT simpleInstructions
   26                | pbkInstruction

   27 simpleInstructions: ADA
   28                   | AND
   29                   | ANDS
   30                   | BRX
   31                   | COS
   32                   | DADD
   33                   | DMIN
   34                   | DMAX
   35                   | DFMA
   36                   | DMUL
   37                   | EX2
   38                   | F2F
   39                   | F2I
   40                   | FADD
   41                   | FADD32
   42                   | FADD32I
   43                   | FMAD
   44                   | FMAD32I
   45                   | FMUL
   46                   | FMUL32
   47                   | FMUL32I
   48                   | FSET
   49                   | DSET
   50                   | G2R
   51                   | GLD
   52                   | GST
   53                   | I2F
   54                   | I2I
   55                   | IADD
   56                   | IADD32
   57                   | IADD32I
   58                   | IMAD
   59                   | ISAD
   60                   | IMAD24
   61                   | IMAD32I
   62                   | IMAD32
   63                   | IMUL
   64                   | IMUL24
   65                   | IMUL24H
   66                   | IMULS24
   67                   | IMUL32
   68                   | IMUL32S24
   69                   | IMUL32I
   70                   | IMUL32I24
   71                   | IMUL32IS24
   72                   | IMUL32U24
   73                   | ISET
   74                   | LG2
   75                   | LLD
   76                   | LST
   77                   | MOV
   78                   | MOV32
   79                   | MVC
   80                   | MVI
   81                   | NOP
   82                   | NOT
   83                   | NOTS
   84                   | OR
   85                   | ORS
   86                   | R2A
   87                   | R2G
   88                   | R2GU16U8
   89                   | RCP
   90                   | RCP32
   91                   | RET
   92                   | RRO
   93                   | RSQ
   94                   | SHL
   95                   | SHR
   96                   | SIN
   97                   | SSY
   98                   | XOR
   99                   | XORS
  100                   | S2R
  101                   | SASS_LD
  102                   | STS
  103                   | LDS
  104                   | SASS_ST
  105                   | EXIT
  106                   | BAR
  107                   | IMIN
  108                   | IMAX
  109                   | A2R
  110                   | FMAX
  111                   | FMIN
  112                   | TEX
  113                   | TEX32
  114                   | C2R
  115                   | BRK
  116                   | R2C
  117                   | IADDCARRY
  118                   | VOTE

  119 $@3: %empty

  120 pbkInstruction: PBK $@3 HEXLITERAL

  121 $@4: %empty

  122 branchInstructions: BRA $@4 instructionPredicate HEXLITERAL

  123 $@5: %empty

  124 branchInstructions: BRA $@5 HEXLITERAL

  125 $@6: %empty

  126 branchInstructions: CAL $@6 HEXLITERAL

  127 $@7: %empty

  128 branchInstructions: CAL $@7 DOTNOINC HEXLITERAL

  129 modifierList: modifier modifierList
  130             | %empty

  131 modifier: opTypes
  132         | DOTBEXT
  133         | DOTS
  134         | DOTSFU
  135         | DOTTRUNC
  136         | DOTCEIL
  137         | DOTFLOOR
  138         | DOTX
  139         | DOTE
  140         | DOTRED
  141         | DOTPOPC
  142         | DOTIR
  143         | DOTUN
  144         | DOTNODEP
  145         | DOTANY
  146         | DOTALL

  147 opTypes: DOTF16
  148        | DOTF32
  149        | DOTF64
  150        | DOTS8
  151        | DOTS16
  152        | DOTS32
  153        | DOTS64
  154        | DOTS128
  155        | DOTU8
  156        | DOTU16
  157        | DOTU32
  158        | DOTU24
  159        | DOTU64
  160        | DOTHI

  161 $@8: %empty

  162 operandList: operandList $@8 operand
  163            | %empty

  164 operand: registerlocation
  165        | PIPE registerlocation PIPE
  166        | TILDE registerlocation
  167        | LEFTBRACKET instructionPredicate RIGHTBRACKET
  168        | memorylocation opTypes
  169        | memorylocation
  170        | immediateValue
  171        | extraModifier
  172        | operandPredicate
  173        | preOperand

  174 registerlocation: REGISTER regMod
  175                 | OSQBRACKET REGISTER CSQBRACKET
  176                 | REGISTERLO
  177                 | REGISTERHI
  178                 | SREGISTER
  179                 | OFFSETREGISTER
  180                 | PREDREGISTER PREDREGISTER2
  181                 | PREDREGISTER REGISTER

  182 regMod: DOTCC
  183       | %empty

  184 memorylocation: SMEMLOCATION
  185               | ABSSMEMLOCATION
  186               | GMEMLOCATION
  187               | CMEMLOCATION
  188               | LMEMLOCATION

  189 immediateValue: IDENTIFIER
  190               | HEXLITERAL

  191 extraModifier: EQ
  192              | EQU
  193              | GE
  194              | GEU
  195              | GT
  196              | GTU
  197              | LE
  198              | LEU
  199              | LT
  200              | LTU
  201              | NE
  202              | NEU

  203 instructionPredicate: PREDREGISTER3 predicateModifier
  204                     | PREDREGISTER3

  205 operandPredicate: PREDREGISTER3 predicateModifier
  206                 | PREDREGISTER3

  207 preOperand: EX2
  208           | SIN
  209           | COS

  210 predicateModifier: DOTEQ
  211                  | DOTEQU
  212                  | DOTFALSE
  213                  | DOTGE
  214                  | DOTGEU
  215                  | DOTGT
  216                  | DOTGTU
  217                  | DOTLE
  218                  | DOTLEU
  219                  | DOTLT
  220                  | DOTLTU
  221                  | DOTNE
  222                  | DOTNEU
  223                  | DOTNSF
  224                  | DOTSF
  225                  | DOTCARRY


Terminals, with rules where they appear

$end (0) 0
error (256)
BAR (258) 106
ADA (259) 27
AND (260) 28
ANDS (261) 29
BRA (262) 122 124
BRX (263) 30
CAL (264) 126 128
COS (265) 31 209
DADD (266) 32
DMIN (267) 33
DMAX (268) 34
DFMA (269) 35
DMUL (270) 36
EX2 (271) 37 207
F2F (272) 38
F2I (273) 39
FADD (274) 40
FADD32 (275) 41
FADD32I (276) 42
FMAD (277) 43
FMAD32I (278) 44
FMUL (279) 45
FMUL32 (280) 46
FMUL32I (281) 47
FSET (282) 48
DSET (283) 49
G2R (284) 50
GLD (285) 51
GST (286) 52
I2F (287) 53
I2I (288) 54
IADD (289) 55
IADD32 (290) 56
IADD32I (291) 57
IMAD (292) 58
ISAD (293) 59
IMAD24 (294) 60
IMAD32I (295) 61
IMAD32 (296) 62
IADDCARRY (297) 117
IMUL (298) 63
IMUL24 (299) 64
IMUL24H (300) 65
IMULS24 (301) 66
IMUL32 (302) 67
IMUL32S24 (303) 68
IMUL32U24 (304) 72
IMUL32I (305) 69
IMUL32I24 (306) 70
IMUL32IS24 (307) 71
ISET (308) 73
LG2 (309) 74
LLD (310) 75
LST (311) 76
MOV (312) 77
MOV32 (313) 78
MVC (314) 79
MVI (315) 80
NOP (316) 81
NOT (317) 82
NOTS (318) 83
OR (319) 84
ORS (320) 85
R2A (321) 86
R2G (322) 87
R2GU16U8 (323) 88
RCP (324) 89
RCP32 (325) 90
RET (326) 91
RRO (327) 92
RSQ (328) 93
SIN (329) 96 208
SHL (330) 94
SHR (331) 95
SSY (332) 97
XOR (333) 98
XORS (334) 99
S2R (335) 100
SASS_LD (336) 101
STS (337) 102
LDS (338) 103
SASS_ST (339) 104
IMIN (340) 107
IMAX (341) 108
A2R (342) 109
FMAX (343) 110
FMIN (344) 111
TEX (345) 112
TEX32 (346) 113
C2R (347) 114
EXIT (348) 105
GRED (349) 24
PBK (350) 120
BRK (351) 115
R2C (352) 116
GATOM (353) 25
VOTE (354) 118
EQ (355) 191
EQU (356) 192
GE (357) 193
GEU (358) 194
GT (359) 195
GTU (360) 196
LE (361) 197
LEU (362) 198
LT (363) 199
LTU (364) 200
NE (365) 201
NEU (366) 202
DOTBEXT (367) 132
DOTS (368) 133
DOTSFU (369) 134
DOTTRUNC (370) 135
DOTCEIL (371) 136
DOTFLOOR (372) 137
DOTIR (373) 142
DOTUN (374) 143
DOTNODEP (375) 144
DOTSAT (376)
DOTANY (377) 145
DOTALL (378) 146
DOTF16 (379) 147
DOTF32 (380) 148
DOTF64 (381) 149
DOTS8 (382) 150
DOTS16 (383) 151
DOTS32 (384) 152
DOTS64 (385) 153
DOTS128 (386) 154
DOTU8 (387) 155
DOTU16 (388) 156
DOTU32 (389) 157
DOTU24 (390) 158
DOTU64 (391) 159
DOTHI (392) 160
DOTNOINC (393) 128
DOTEQ (394) 210
DOTEQU (395) 211
DOTFALSE (396) 212
DOTGE (397) 213
DOTGEU (398) 214
DOTGT (399) 215
DOTGTU (400) 216
DOTLE (401) 217
DOTLEU (402) 218
DOTLT (403) 219
DOTLTU (404) 220
DOTNE (405) 221
DOTNEU (406) 222
DOTNSF (407) 223
DOTSF (408) 224
DOTCARRY (409) 225
DOTCC (410) 182
DOTX (411) 138
DOTE (412) 139
DOTRED (413) 140
DOTPOPC (414) 141
REGISTER (415) 174 175 181
REGISTERLO (416) 176
REGISTERHI (417) 177
OFFSETREGISTER (418) 179
PREDREGISTER (419) 180 181
PREDREGISTER2 (420) 180
PREDREGISTER3 (421) 203 204 205 206
SREGISTER (422) 178
VERSIONHEADER (423) 3 4 5
FUNCTIONHEADER (424) 9
SMEMLOCATION (425) 184
ABSSMEMLOCATION (426) 185
GMEMLOCATION (427) 186
CMEMLOCATION (428) 187
LMEMLOCATION (429) 188
IDENTIFIER (430) 3 4 5 9 189
HEXLITERAL (431) 120 122 124 126 128 190
LEFTBRACKET (432) 167
RIGHTBRACKET (433) 167
PIPE (434) 165
TILDE (435) 166
NEWLINE (436) 3 4 5 9 10 11 12 13 14
SEMICOLON (437) 11 13
LABEL (438) 20
LABELSTART (439) 20
LABELEND (440) 20
PTXHEADER (441)
ELFHEADER (442)
INFOARCHVERSION (443)
INFOCODEVERSION_HEADER (444)
INFOCODEVERSION (445)
INFOPRODUCER (446)
INFOHOST (447)
INFOCOMPILESIZE_HEADER (448)
INFOCOMPILESIZE (449)
INFOIDENTIFIER (450)
DOT (451) 24 25
INSTHEX (452) 19
OSQBRACKET (453) 175
CSQBRACKET (454) 175


Nonterminals, with rules where they appear

$accept (200)
    on left: 0
program (201)
    on left: 1 2, on right: 0 1
sassCode (202)
    on left: 3 4 5, on right: 1 2
functionList (203)
    on left: 6 7, on right: 3 4 6
function (204)
    on left: 9, on right: 6 7
$@1 (205)
    on left: 8, on right: 9
statementList (206)
    on left: 10 11 12 13 14, on right: 9 10 11
statement (207)
    on left: 16, on right: 10 11 12 13
$@2 (208)
    on left: 15, on right: 16
statementend (209)
    on left: 17 18, on right: 16
instructionHex (210)
    on left: 19, on right: 17
instructionLabel (211)
    on left: 20, on right: 16
assemblyInstruction (212)
    on left: 21, on right: 17
baseInstruction (213)
    on left: 22 23 24 25 26, on right: 21
simpleInstructions (214)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 111 112 113 114 115 116 117 118, on right:
    22 24 25
pbkInstruction (215)
    on left: 120, on right: 26
$@3 (216)
    on left: 119, on right: 120
branchInstructions (217)
    on left: 122 124 126 128, on right: 23
$@4 (218)
    on left: 121, on right: 122
$@5 (219)
    on left: 123, on right: 124
$@6 (220)
    on left: 125, on right: 126
$@7 (221)
    on left: 127, on right: 128
modifierList (222)
    on left: 129 130, on right: 21 129
modifier (223)
    on left: 131 132 133 134 135 136 137 138 139 140 141 142 143 144
    145 146, on right: 129
opTypes (224)
    on left: 147 148 149 150 151 152 153 154 155 156 157 158 159 160,
    on right: 131 168
operandList (225)
    on left: 162 163, on right: 21 162
$@8 (226)
    on left: 161, on right: 162
operand (227)
    on left: 164 165 166 167 168 169 170 171 172 173, on right: 162
registerlocation (228)
    on left: 174 175 176 177 178 179 180 181, on right: 164 165 166
regMod (229)
    on left: 182 183, on right: 174
memorylocation (230)
    on left: 184 185 186 187 188, on right: 168 169
immediateValue (231)
    on left: 189 190, on right: 170
extraModifier (232)
    on left: 191 192 193 194 195 196 197 198 199 200 201 202, on right:
    171
instructionPredicate (233)
    on left: 203 204, on right: 122 167
operandPredicate (234)
    on left: 205 206, on right: 172
preOperand (235)
    on left: 207 208 209, on right: 173
predicateModifier (236)
    on left: 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225, on right: 203 205


State 0

    0 $accept: . program $end
    1 program: . program sassCode
    2        | . sassCode
    3 sassCode: . VERSIONHEADER IDENTIFIER NEWLINE functionList
    4         | . NEWLINE VERSIONHEADER IDENTIFIER NEWLINE functionList
    5         | . VERSIONHEADER IDENTIFIER NEWLINE

    VERSIONHEADER  shift, and go to state 1
    NEWLINE        shift, and go to state 2

    program   go to state 3
    sassCode  go to state 4


State 1

    3 sassCode: VERSIONHEADER . IDENTIFIER NEWLINE functionList
    5         | VERSIONHEADER . IDENTIFIER NEWLINE

    IDENTIFIER  shift, and go to state 5


State 2

    4 sassCode: NEWLINE . VERSIONHEADER IDENTIFIER NEWLINE functionList

    VERSIONHEADER  shift, and go to state 6


State 3

    0 $accept: program . $end
    1 program: program . sassCode
    3 sassCode: . VERSIONHEADER IDENTIFIER NEWLINE functionList
    4         | . NEWLINE VERSIONHEADER IDENTIFIER NEWLINE functionList
    5         | . VERSIONHEADER IDENTIFIER NEWLINE

    $end           shift, and go to state 7
    VERSIONHEADER  shift, and go to state 1
    NEWLINE        shift, and go to state 2

    sassCode  go to state 8


State 4

    2 program: sassCode .

    $default  reduce using rule 2 (program)


State 5

    3 sassCode: VERSIONHEADER IDENTIFIER . NEWLINE functionList
    5         | VERSIONHEADER IDENTIFIER . NEWLINE

    NEWLINE  shift, and go to state 9


State 6

    4 sassCode: NEWLINE VERSIONHEADER . IDENTIFIER NEWLINE functionList

    IDENTIFIER  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    1 program: program sassCode .

    $default  reduce using rule 1 (program)


State 9

    3 sassCode: VERSIONHEADER IDENTIFIER NEWLINE . functionList
    5         | VERSIONHEADER IDENTIFIER NEWLINE .  [$end, VERSIONHEADER, NEWLINE]
    6 functionList: . functionList function
    7             | . function
    9 function: . FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE

    FUNCTIONHEADER  shift, and go to state 11

    $default  reduce using rule 5 (sassCode)

    functionList  go to state 12
    function      go to state 13


State 10

    4 sassCode: NEWLINE VERSIONHEADER IDENTIFIER . NEWLINE functionList

    NEWLINE  shift, and go to state 14


State 11

    9 function: FUNCTIONHEADER . IDENTIFIER $@1 statementList NEWLINE

    IDENTIFIER  shift, and go to state 15


State 12

    3 sassCode: VERSIONHEADER IDENTIFIER NEWLINE functionList .  [$end, VERSIONHEADER, NEWLINE]
    6 functionList: functionList . function
    9 function: . FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE

    FUNCTIONHEADER  shift, and go to state 11

    $default  reduce using rule 3 (sassCode)

    function  go to state 16


State 13

    7 functionList: function .

    $default  reduce using rule 7 (functionList)


State 14

    4 sassCode: NEWLINE VERSIONHEADER IDENTIFIER NEWLINE . functionList
    6 functionList: . functionList function
    7             | . function
    9 function: . FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE

    FUNCTIONHEADER  shift, and go to state 11

    functionList  go to state 17
    function      go to state 13


State 15

    8 $@1: . %empty
    9 function: FUNCTIONHEADER IDENTIFIER . $@1 statementList NEWLINE

    $default  reduce using rule 8 ($@1)

    $@1  go to state 18


State 16

    6 functionList: functionList function .

    $default  reduce using rule 6 (functionList)


State 17

    4 sassCode: NEWLINE VERSIONHEADER IDENTIFIER NEWLINE functionList .  [$end, VERSIONHEADER, NEWLINE]
    6 functionList: functionList . function
    9 function: . FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE

    FUNCTIONHEADER  shift, and go to state 11

    $default  reduce using rule 4 (sassCode)

    function  go to state 16


State 18

    9 function: FUNCTIONHEADER IDENTIFIER $@1 . statementList NEWLINE
   10 statementList: . statementList statement NEWLINE
   11              | . statementList statement SEMICOLON NEWLINE
   12              | . statement NEWLINE
   13              | . statement SEMICOLON NEWLINE
   14              | . NEWLINE
   15 $@2: . %empty  [LABELSTART]
   16 statement: . $@2 instructionLabel statementend

    NEWLINE  shift, and go to state 19

    $default  reduce using rule 15 ($@2)

    statementList  go to state 20
    statement      go to state 21
    $@2            go to state 22


State 19

   14 statementList: NEWLINE .

    $default  reduce using rule 14 (statementList)


State 20

    9 function: FUNCTIONHEADER IDENTIFIER $@1 statementList . NEWLINE
   10 statementList: statementList . statement NEWLINE
   11              | statementList . statement SEMICOLON NEWLINE
   15 $@2: . %empty  [LABELSTART]
   16 statement: . $@2 instructionLabel statementend

    NEWLINE  shift, and go to state 23

    $default  reduce using rule 15 ($@2)

    statement  go to state 24
    $@2        go to state 22


State 21

   12 statementList: statement . NEWLINE
   13              | statement . SEMICOLON NEWLINE

    NEWLINE    shift, and go to state 25
    SEMICOLON  shift, and go to state 26


State 22

   16 statement: $@2 . instructionLabel statementend
   20 instructionLabel: . LABELSTART LABEL LABELEND

    LABELSTART  shift, and go to state 27

    instructionLabel  go to state 28


State 23

    9 function: FUNCTIONHEADER IDENTIFIER $@1 statementList NEWLINE .

    $default  reduce using rule 9 (function)


State 24

   10 statementList: statementList statement . NEWLINE
   11              | statementList statement . SEMICOLON NEWLINE

    NEWLINE    shift, and go to state 29
    SEMICOLON  shift, and go to state 30


State 25

   12 statementList: statement NEWLINE .

    $default  reduce using rule 12 (statementList)


State 26

   13 statementList: statement SEMICOLON . NEWLINE

    NEWLINE  shift, and go to state 31


State 27

   20 instructionLabel: LABELSTART . LABEL LABELEND

    LABEL  shift, and go to state 32


State 28

   16 statement: $@2 instructionLabel . statementend
   17 statementend: . instructionHex assemblyInstruction
   18             | . %empty  [NEWLINE, SEMICOLON]
   19 instructionHex: . INSTHEX

    INSTHEX  shift, and go to state 33

    $default  reduce using rule 18 (statementend)

    statementend    go to state 34
    instructionHex  go to state 35


State 29

   10 statementList: statementList statement NEWLINE .

    $default  reduce using rule 10 (statementList)


State 30

   11 statementList: statementList statement SEMICOLON . NEWLINE

    NEWLINE  shift, and go to state 36


State 31

   13 statementList: statement SEMICOLON NEWLINE .

    $default  reduce using rule 13 (statementList)


State 32

   20 instructionLabel: LABELSTART LABEL . LABELEND

    LABELEND  shift, and go to state 37


State 33

   19 instructionHex: INSTHEX .

    $default  reduce using rule 19 (instructionHex)


State 34

   16 statement: $@2 instructionLabel statementend .

    $default  reduce using rule 16 (statement)


State 35

   17 statementend: instructionHex . assemblyInstruction
   21 assemblyInstruction: . baseInstruction modifierList operandList
   22 baseInstruction: . simpleInstructions
   23                | . branchInstructions
   24                | . GRED DOT simpleInstructions
   25                | . GATOM DOT simpleInstructions
   26                | . pbkInstruction
   27 simpleInstructions: . ADA
   28                   | . AND
   29                   | . ANDS
   30                   | . BRX
   31                   | . COS
   32                   | . DADD
   33                   | . DMIN
   34                   | . DMAX
   35                   | . DFMA
   36                   | . DMUL
   37                   | . EX2
   38                   | . F2F
   39                   | . F2I
   40                   | . FADD
   41                   | . FADD32
   42                   | . FADD32I
   43                   | . FMAD
   44                   | . FMAD32I
   45                   | . FMUL
   46                   | . FMUL32
   47                   | . FMUL32I
   48                   | . FSET
   49                   | . DSET
   50                   | . G2R
   51                   | . GLD
   52                   | . GST
   53                   | . I2F
   54                   | . I2I
   55                   | . IADD
   56                   | . IADD32
   57                   | . IADD32I
   58                   | . IMAD
   59                   | . ISAD
   60                   | . IMAD24
   61                   | . IMAD32I
   62                   | . IMAD32
   63                   | . IMUL
   64                   | . IMUL24
   65                   | . IMUL24H
   66                   | . IMULS24
   67                   | . IMUL32
   68                   | . IMUL32S24
   69                   | . IMUL32I
   70                   | . IMUL32I24
   71                   | . IMUL32IS24
   72                   | . IMUL32U24
   73                   | . ISET
   74                   | . LG2
   75                   | . LLD
   76                   | . LST
   77                   | . MOV
   78                   | . MOV32
   79                   | . MVC
   80                   | . MVI
   81                   | . NOP
   82                   | . NOT
   83                   | . NOTS
   84                   | . OR
   85                   | . ORS
   86                   | . R2A
   87                   | . R2G
   88                   | . R2GU16U8
   89                   | . RCP
   90                   | . RCP32
   91                   | . RET
   92                   | . RRO
   93                   | . RSQ
   94                   | . SHL
   95                   | . SHR
   96                   | . SIN
   97                   | . SSY
   98                   | . XOR
   99                   | . XORS
  100                   | . S2R
  101                   | . SASS_LD
  102                   | . STS
  103                   | . LDS
  104                   | . SASS_ST
  105                   | . EXIT
  106                   | . BAR
  107                   | . IMIN
  108                   | . IMAX
  109                   | . A2R
  110                   | . FMAX
  111                   | . FMIN
  112                   | . TEX
  113                   | . TEX32
  114                   | . C2R
  115                   | . BRK
  116                   | . R2C
  117                   | . IADDCARRY
  118                   | . VOTE
  120 pbkInstruction: . PBK $@3 HEXLITERAL
  122 branchInstructions: . BRA $@4 instructionPredicate HEXLITERAL
  124                   | . BRA $@5 HEXLITERAL
  126                   | . CAL $@6 HEXLITERAL
  128                   | . CAL $@7 DOTNOINC HEXLITERAL

    BAR         shift, and go to state 38
    ADA         shift, and go to state 39
    AND         shift, and go to state 40
    ANDS        shift, and go to state 41
    BRA         shift, and go to state 42
    BRX         shift, and go to state 43
    CAL         shift, and go to state 44
    COS         shift, and go to state 45
    DADD        shift, and go to state 46
    DMIN        shift, and go to state 47
    DMAX        shift, and go to state 48
    DFMA        shift, and go to state 49
    DMUL        shift, and go to state 50
    EX2         shift, and go to state 51
    F2F         shift, and go to state 52
    F2I         shift, and go to state 53
    FADD        shift, and go to state 54
    FADD32      shift, and go to state 55
    FADD32I     shift, and go to state 56
    FMAD        shift, and go to state 57
    FMAD32I     shift, and go to state 58
    FMUL        shift, and go to state 59
    FMUL32      shift, and go to state 60
    FMUL32I     shift, and go to state 61
    FSET        shift, and go to state 62
    DSET        shift, and go to state 63
    G2R         shift, and go to state 64
    GLD         shift, and go to state 65
    GST         shift, and go to state 66
    I2F         shift, and go to state 67
    I2I         shift, and go to state 68
    IADD        shift, and go to state 69
    IADD32      shift, and go to state 70
    IADD32I     shift, and go to state 71
    IMAD        shift, and go to state 72
    ISAD        shift, and go to state 73
    IMAD24      shift, and go to state 74
    IMAD32I     shift, and go to state 75
    IMAD32      shift, and go to state 76
    IADDCARRY   shift, and go to state 77
    IMUL        shift, and go to state 78
    IMUL24      shift, and go to state 79
    IMUL24H     shift, and go to state 80
    IMULS24     shift, and go to state 81
    IMUL32      shift, and go to state 82
    IMUL32S24   shift, and go to state 83
    IMUL32U24   shift, and go to state 84
    IMUL32I     shift, and go to state 85
    IMUL32I24   shift, and go to state 86
    IMUL32IS24  shift, and go to state 87
    ISET        shift, and go to state 88
    LG2         shift, and go to state 89
    LLD         shift, and go to state 90
    LST         shift, and go to state 91
    MOV         shift, and go to state 92
    MOV32       shift, and go to state 93
    MVC         shift, and go to state 94
    MVI         shift, and go to state 95
    NOP         shift, and go to state 96
    NOT         shift, and go to state 97
    NOTS        shift, and go to state 98
    OR          shift, and go to state 99
    ORS         shift, and go to state 100
    R2A         shift, and go to state 101
    R2G         shift, and go to state 102
    R2GU16U8    shift, and go to state 103
    RCP         shift, and go to state 104
    RCP32       shift, and go to state 105
    RET         shift, and go to state 106
    RRO         shift, and go to state 107
    RSQ         shift, and go to state 108
    SIN         shift, and go to state 109
    SHL         shift, and go to state 110
    SHR         shift, and go to state 111
    SSY         shift, and go to state 112
    XOR         shift, and go to state 113
    XORS        shift, and go to state 114
    S2R         shift, and go to state 115
    SASS_LD     shift, and go to state 116
    STS         shift, and go to state 117
    LDS         shift, and go to state 118
    SASS_ST     shift, and go to state 119
    IMIN        shift, and go to state 120
    IMAX        shift, and go to state 121
    A2R         shift, and go to state 122
    FMAX        shift, and go to state 123
    FMIN        shift, and go to state 124
    TEX         shift, and go to state 125
    TEX32       shift, and go to state 126
    C2R         shift, and go to state 127
    EXIT        shift, and go to state 128
    GRED        shift, and go to state 129
    PBK         shift, and go to state 130
    BRK         shift, and go to state 131
    R2C         shift, and go to state 132
    GATOM       shift, and go to state 133
    VOTE        shift, and go to state 134

    assemblyInstruction  go to state 135
    baseInstruction      go to state 136
    simpleInstructions   go to state 137
    pbkInstruction       go to state 138
    branchInstructions   go to state 139


State 36

   11 statementList: statementList statement SEMICOLON NEWLINE .

    $default  reduce using rule 11 (statementList)


State 37

   20 instructionLabel: LABELSTART LABEL LABELEND .

    $default  reduce using rule 20 (instructionLabel)


State 38

  106 simpleInstructions: BAR .

    $default  reduce using rule 106 (simpleInstructions)


State 39

   27 simpleInstructions: ADA .

    $default  reduce using rule 27 (simpleInstructions)


State 40

   28 simpleInstructions: AND .

    $default  reduce using rule 28 (simpleInstructions)


State 41

   29 simpleInstructions: ANDS .

    $default  reduce using rule 29 (simpleInstructions)


State 42

  121 $@4: . %empty  [PREDREGISTER3]
  122 branchInstructions: BRA . $@4 instructionPredicate HEXLITERAL
  123 $@5: . %empty  [HEXLITERAL]
  124 branchInstructions: BRA . $@5 HEXLITERAL

    HEXLITERAL  reduce using rule 123 ($@5)
    $default    reduce using rule 121 ($@4)

    $@4  go to state 140
    $@5  go to state 141


State 43

   30 simpleInstructions: BRX .

    $default  reduce using rule 30 (simpleInstructions)


State 44

  125 $@6: . %empty  [HEXLITERAL]
  126 branchInstructions: CAL . $@6 HEXLITERAL
  127 $@7: . %empty  [DOTNOINC]
  128 branchInstructions: CAL . $@7 DOTNOINC HEXLITERAL

    DOTNOINC  reduce using rule 127 ($@7)
    $default  reduce using rule 125 ($@6)

    $@6  go to state 142
    $@7  go to state 143


State 45

   31 simpleInstructions: COS .

    $default  reduce using rule 31 (simpleInstructions)


State 46

   32 simpleInstructions: DADD .

    $default  reduce using rule 32 (simpleInstructions)


State 47

   33 simpleInstructions: DMIN .

    $default  reduce using rule 33 (simpleInstructions)


State 48

   34 simpleInstructions: DMAX .

    $default  reduce using rule 34 (simpleInstructions)


State 49

   35 simpleInstructions: DFMA .

    $default  reduce using rule 35 (simpleInstructions)


State 50

   36 simpleInstructions: DMUL .

    $default  reduce using rule 36 (simpleInstructions)


State 51

   37 simpleInstructions: EX2 .

    $default  reduce using rule 37 (simpleInstructions)


State 52

   38 simpleInstructions: F2F .

    $default  reduce using rule 38 (simpleInstructions)


State 53

   39 simpleInstructions: F2I .

    $default  reduce using rule 39 (simpleInstructions)


State 54

   40 simpleInstructions: FADD .

    $default  reduce using rule 40 (simpleInstructions)


State 55

   41 simpleInstructions: FADD32 .

    $default  reduce using rule 41 (simpleInstructions)


State 56

   42 simpleInstructions: FADD32I .

    $default  reduce using rule 42 (simpleInstructions)


State 57

   43 simpleInstructions: FMAD .

    $default  reduce using rule 43 (simpleInstructions)


State 58

   44 simpleInstructions: FMAD32I .

    $default  reduce using rule 44 (simpleInstructions)


State 59

   45 simpleInstructions: FMUL .

    $default  reduce using rule 45 (simpleInstructions)


State 60

   46 simpleInstructions: FMUL32 .

    $default  reduce using rule 46 (simpleInstructions)


State 61

   47 simpleInstructions: FMUL32I .

    $default  reduce using rule 47 (simpleInstructions)


State 62

   48 simpleInstructions: FSET .

    $default  reduce using rule 48 (simpleInstructions)


State 63

   49 simpleInstructions: DSET .

    $default  reduce using rule 49 (simpleInstructions)


State 64

   50 simpleInstructions: G2R .

    $default  reduce using rule 50 (simpleInstructions)


State 65

   51 simpleInstructions: GLD .

    $default  reduce using rule 51 (simpleInstructions)


State 66

   52 simpleInstructions: GST .

    $default  reduce using rule 52 (simpleInstructions)


State 67

   53 simpleInstructions: I2F .

    $default  reduce using rule 53 (simpleInstructions)


State 68

   54 simpleInstructions: I2I .

    $default  reduce using rule 54 (simpleInstructions)


State 69

   55 simpleInstructions: IADD .

    $default  reduce using rule 55 (simpleInstructions)


State 70

   56 simpleInstructions: IADD32 .

    $default  reduce using rule 56 (simpleInstructions)


State 71

   57 simpleInstructions: IADD32I .

    $default  reduce using rule 57 (simpleInstructions)


State 72

   58 simpleInstructions: IMAD .

    $default  reduce using rule 58 (simpleInstructions)


State 73

   59 simpleInstructions: ISAD .

    $default  reduce using rule 59 (simpleInstructions)


State 74

   60 simpleInstructions: IMAD24 .

    $default  reduce using rule 60 (simpleInstructions)


State 75

   61 simpleInstructions: IMAD32I .

    $default  reduce using rule 61 (simpleInstructions)


State 76

   62 simpleInstructions: IMAD32 .

    $default  reduce using rule 62 (simpleInstructions)


State 77

  117 simpleInstructions: IADDCARRY .

    $default  reduce using rule 117 (simpleInstructions)


State 78

   63 simpleInstructions: IMUL .

    $default  reduce using rule 63 (simpleInstructions)


State 79

   64 simpleInstructions: IMUL24 .

    $default  reduce using rule 64 (simpleInstructions)


State 80

   65 simpleInstructions: IMUL24H .

    $default  reduce using rule 65 (simpleInstructions)


State 81

   66 simpleInstructions: IMULS24 .

    $default  reduce using rule 66 (simpleInstructions)


State 82

   67 simpleInstructions: IMUL32 .

    $default  reduce using rule 67 (simpleInstructions)


State 83

   68 simpleInstructions: IMUL32S24 .

    $default  reduce using rule 68 (simpleInstructions)


State 84

   72 simpleInstructions: IMUL32U24 .

    $default  reduce using rule 72 (simpleInstructions)


State 85

   69 simpleInstructions: IMUL32I .

    $default  reduce using rule 69 (simpleInstructions)


State 86

   70 simpleInstructions: IMUL32I24 .

    $default  reduce using rule 70 (simpleInstructions)


State 87

   71 simpleInstructions: IMUL32IS24 .

    $default  reduce using rule 71 (simpleInstructions)


State 88

   73 simpleInstructions: ISET .

    $default  reduce using rule 73 (simpleInstructions)


State 89

   74 simpleInstructions: LG2 .

    $default  reduce using rule 74 (simpleInstructions)


State 90

   75 simpleInstructions: LLD .

    $default  reduce using rule 75 (simpleInstructions)


State 91

   76 simpleInstructions: LST .

    $default  reduce using rule 76 (simpleInstructions)


State 92

   77 simpleInstructions: MOV .

    $default  reduce using rule 77 (simpleInstructions)


State 93

   78 simpleInstructions: MOV32 .

    $default  reduce using rule 78 (simpleInstructions)


State 94

   79 simpleInstructions: MVC .

    $default  reduce using rule 79 (simpleInstructions)


State 95

   80 simpleInstructions: MVI .

    $default  reduce using rule 80 (simpleInstructions)


State 96

   81 simpleInstructions: NOP .

    $default  reduce using rule 81 (simpleInstructions)


State 97

   82 simpleInstructions: NOT .

    $default  reduce using rule 82 (simpleInstructions)


State 98

   83 simpleInstructions: NOTS .

    $default  reduce using rule 83 (simpleInstructions)


State 99

   84 simpleInstructions: OR .

    $default  reduce using rule 84 (simpleInstructions)


State 100

   85 simpleInstructions: ORS .

    $default  reduce using rule 85 (simpleInstructions)


State 101

   86 simpleInstructions: R2A .

    $default  reduce using rule 86 (simpleInstructions)


State 102

   87 simpleInstructions: R2G .

    $default  reduce using rule 87 (simpleInstructions)


State 103

   88 simpleInstructions: R2GU16U8 .

    $default  reduce using rule 88 (simpleInstructions)


State 104

   89 simpleInstructions: RCP .

    $default  reduce using rule 89 (simpleInstructions)


State 105

   90 simpleInstructions: RCP32 .

    $default  reduce using rule 90 (simpleInstructions)


State 106

   91 simpleInstructions: RET .

    $default  reduce using rule 91 (simpleInstructions)


State 107

   92 simpleInstructions: RRO .

    $default  reduce using rule 92 (simpleInstructions)


State 108

   93 simpleInstructions: RSQ .

    $default  reduce using rule 93 (simpleInstructions)


State 109

   96 simpleInstructions: SIN .

    $default  reduce using rule 96 (simpleInstructions)


State 110

   94 simpleInstructions: SHL .

    $default  reduce using rule 94 (simpleInstructions)


State 111

   95 simpleInstructions: SHR .

    $default  reduce using rule 95 (simpleInstructions)


State 112

   97 simpleInstructions: SSY .

    $default  reduce using rule 97 (simpleInstructions)


State 113

   98 simpleInstructions: XOR .

    $default  reduce using rule 98 (simpleInstructions)


State 114

   99 simpleInstructions: XORS .

    $default  reduce using rule 99 (simpleInstructions)


State 115

  100 simpleInstructions: S2R .

    $default  reduce using rule 100 (simpleInstructions)


State 116

  101 simpleInstructions: SASS_LD .

    $default  reduce using rule 101 (simpleInstructions)


State 117

  102 simpleInstructions: STS .

    $default  reduce using rule 102 (simpleInstructions)


State 118

  103 simpleInstructions: LDS .

    $default  reduce using rule 103 (simpleInstructions)


State 119

  104 simpleInstructions: SASS_ST .

    $default  reduce using rule 104 (simpleInstructions)


State 120

  107 simpleInstructions: IMIN .

    $default  reduce using rule 107 (simpleInstructions)


State 121

  108 simpleInstructions: IMAX .

    $default  reduce using rule 108 (simpleInstructions)


State 122

  109 simpleInstructions: A2R .

    $default  reduce using rule 109 (simpleInstructions)


State 123

  110 simpleInstructions: FMAX .

    $default  reduce using rule 110 (simpleInstructions)


State 124

  111 simpleInstructions: FMIN .

    $default  reduce using rule 111 (simpleInstructions)


State 125

  112 simpleInstructions: TEX .

    $default  reduce using rule 112 (simpleInstructions)


State 126

  113 simpleInstructions: TEX32 .

    $default  reduce using rule 113 (simpleInstructions)


State 127

  114 simpleInstructions: C2R .

    $default  reduce using rule 114 (simpleInstructions)


State 128

  105 simpleInstructions: EXIT .

    $default  reduce using rule 105 (simpleInstructions)


State 129

   24 baseInstruction: GRED . DOT simpleInstructions

    DOT  shift, and go to state 144


State 130

  119 $@3: . %empty
  120 pbkInstruction: PBK . $@3 HEXLITERAL

    $default  reduce using rule 119 ($@3)

    $@3  go to state 145


State 131

  115 simpleInstructions: BRK .

    $default  reduce using rule 115 (simpleInstructions)


State 132

  116 simpleInstructions: R2C .

    $default  reduce using rule 116 (simpleInstructions)


State 133

   25 baseInstruction: GATOM . DOT simpleInstructions

    DOT  shift, and go to state 146


State 134

  118 simpleInstructions: VOTE .

    $default  reduce using rule 118 (simpleInstructions)


State 135

   17 statementend: instructionHex assemblyInstruction .

    $default  reduce using rule 17 (statementend)


State 136

   21 assemblyInstruction: baseInstruction . modifierList operandList
  129 modifierList: . modifier modifierList
  130             | . %empty  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, NEWLINE, SEMICOLON, OSQBRACKET]
  131 modifier: . opTypes
  132         | . DOTBEXT
  133         | . DOTS
  134         | . DOTSFU
  135         | . DOTTRUNC
  136         | . DOTCEIL
  137         | . DOTFLOOR
  138         | . DOTX
  139         | . DOTE
  140         | . DOTRED
  141         | . DOTPOPC
  142         | . DOTIR
  143         | . DOTUN
  144         | . DOTNODEP
  145         | . DOTANY
  146         | . DOTALL
  147 opTypes: . DOTF16
  148        | . DOTF32
  149        | . DOTF64
  150        | . DOTS8
  151        | . DOTS16
  152        | . DOTS32
  153        | . DOTS64
  154        | . DOTS128
  155        | . DOTU8
  156        | . DOTU16
  157        | . DOTU32
  158        | . DOTU24
  159        | . DOTU64
  160        | . DOTHI

    DOTBEXT   shift, and go to state 147
    DOTS      shift, and go to state 148
    DOTSFU    shift, and go to state 149
    DOTTRUNC  shift, and go to state 150
    DOTCEIL   shift, and go to state 151
    DOTFLOOR  shift, and go to state 152
    DOTIR     shift, and go to state 153
    DOTUN     shift, and go to state 154
    DOTNODEP  shift, and go to state 155
    DOTANY    shift, and go to state 156
    DOTALL    shift, and go to state 157
    DOTF16    shift, and go to state 158
    DOTF32    shift, and go to state 159
    DOTF64    shift, and go to state 160
    DOTS8     shift, and go to state 161
    DOTS16    shift, and go to state 162
    DOTS32    shift, and go to state 163
    DOTS64    shift, and go to state 164
    DOTS128   shift, and go to state 165
    DOTU8     shift, and go to state 166
    DOTU16    shift, and go to state 167
    DOTU32    shift, and go to state 168
    DOTU24    shift, and go to state 169
    DOTU64    shift, and go to state 170
    DOTHI     shift, and go to state 171
    DOTX      shift, and go to state 172
    DOTE      shift, and go to state 173
    DOTRED    shift, and go to state 174
    DOTPOPC   shift, and go to state 175

    $default  reduce using rule 130 (modifierList)

    modifierList  go to state 176
    modifier      go to state 177
    opTypes       go to state 178


State 137

   22 baseInstruction: simpleInstructions .

    $default  reduce using rule 22 (baseInstruction)


State 138

   26 baseInstruction: pbkInstruction .

    $default  reduce using rule 26 (baseInstruction)


State 139

   23 baseInstruction: branchInstructions .

    $default  reduce using rule 23 (baseInstruction)


State 140

  122 branchInstructions: BRA $@4 . instructionPredicate HEXLITERAL
  203 instructionPredicate: . PREDREGISTER3 predicateModifier
  204                     | . PREDREGISTER3

    PREDREGISTER3  shift, and go to state 179

    instructionPredicate  go to state 180


State 141

  124 branchInstructions: BRA $@5 . HEXLITERAL

    HEXLITERAL  shift, and go to state 181


State 142

  126 branchInstructions: CAL $@6 . HEXLITERAL

    HEXLITERAL  shift, and go to state 182


State 143

  128 branchInstructions: CAL $@7 . DOTNOINC HEXLITERAL

    DOTNOINC  shift, and go to state 183


State 144

   24 baseInstruction: GRED DOT . simpleInstructions
   27 simpleInstructions: . ADA
   28                   | . AND
   29                   | . ANDS
   30                   | . BRX
   31                   | . COS
   32                   | . DADD
   33                   | . DMIN
   34                   | . DMAX
   35                   | . DFMA
   36                   | . DMUL
   37                   | . EX2
   38                   | . F2F
   39                   | . F2I
   40                   | . FADD
   41                   | . FADD32
   42                   | . FADD32I
   43                   | . FMAD
   44                   | . FMAD32I
   45                   | . FMUL
   46                   | . FMUL32
   47                   | . FMUL32I
   48                   | . FSET
   49                   | . DSET
   50                   | . G2R
   51                   | . GLD
   52                   | . GST
   53                   | . I2F
   54                   | . I2I
   55                   | . IADD
   56                   | . IADD32
   57                   | . IADD32I
   58                   | . IMAD
   59                   | . ISAD
   60                   | . IMAD24
   61                   | . IMAD32I
   62                   | . IMAD32
   63                   | . IMUL
   64                   | . IMUL24
   65                   | . IMUL24H
   66                   | . IMULS24
   67                   | . IMUL32
   68                   | . IMUL32S24
   69                   | . IMUL32I
   70                   | . IMUL32I24
   71                   | . IMUL32IS24
   72                   | . IMUL32U24
   73                   | . ISET
   74                   | . LG2
   75                   | . LLD
   76                   | . LST
   77                   | . MOV
   78                   | . MOV32
   79                   | . MVC
   80                   | . MVI
   81                   | . NOP
   82                   | . NOT
   83                   | . NOTS
   84                   | . OR
   85                   | . ORS
   86                   | . R2A
   87                   | . R2G
   88                   | . R2GU16U8
   89                   | . RCP
   90                   | . RCP32
   91                   | . RET
   92                   | . RRO
   93                   | . RSQ
   94                   | . SHL
   95                   | . SHR
   96                   | . SIN
   97                   | . SSY
   98                   | . XOR
   99                   | . XORS
  100                   | . S2R
  101                   | . SASS_LD
  102                   | . STS
  103                   | . LDS
  104                   | . SASS_ST
  105                   | . EXIT
  106                   | . BAR
  107                   | . IMIN
  108                   | . IMAX
  109                   | . A2R
  110                   | . FMAX
  111                   | . FMIN
  112                   | . TEX
  113                   | . TEX32
  114                   | . C2R
  115                   | . BRK
  116                   | . R2C
  117                   | . IADDCARRY
  118                   | . VOTE

    BAR         shift, and go to state 38
    ADA         shift, and go to state 39
    AND         shift, and go to state 40
    ANDS        shift, and go to state 41
    BRX         shift, and go to state 43
    COS         shift, and go to state 45
    DADD        shift, and go to state 46
    DMIN        shift, and go to state 47
    DMAX        shift, and go to state 48
    DFMA        shift, and go to state 49
    DMUL        shift, and go to state 50
    EX2         shift, and go to state 51
    F2F         shift, and go to state 52
    F2I         shift, and go to state 53
    FADD        shift, and go to state 54
    FADD32      shift, and go to state 55
    FADD32I     shift, and go to state 56
    FMAD        shift, and go to state 57
    FMAD32I     shift, and go to state 58
    FMUL        shift, and go to state 59
    FMUL32      shift, and go to state 60
    FMUL32I     shift, and go to state 61
    FSET        shift, and go to state 62
    DSET        shift, and go to state 63
    G2R         shift, and go to state 64
    GLD         shift, and go to state 65
    GST         shift, and go to state 66
    I2F         shift, and go to state 67
    I2I         shift, and go to state 68
    IADD        shift, and go to state 69
    IADD32      shift, and go to state 70
    IADD32I     shift, and go to state 71
    IMAD        shift, and go to state 72
    ISAD        shift, and go to state 73
    IMAD24      shift, and go to state 74
    IMAD32I     shift, and go to state 75
    IMAD32      shift, and go to state 76
    IADDCARRY   shift, and go to state 77
    IMUL        shift, and go to state 78
    IMUL24      shift, and go to state 79
    IMUL24H     shift, and go to state 80
    IMULS24     shift, and go to state 81
    IMUL32      shift, and go to state 82
    IMUL32S24   shift, and go to state 83
    IMUL32U24   shift, and go to state 84
    IMUL32I     shift, and go to state 85
    IMUL32I24   shift, and go to state 86
    IMUL32IS24  shift, and go to state 87
    ISET        shift, and go to state 88
    LG2         shift, and go to state 89
    LLD         shift, and go to state 90
    LST         shift, and go to state 91
    MOV         shift, and go to state 92
    MOV32       shift, and go to state 93
    MVC         shift, and go to state 94
    MVI         shift, and go to state 95
    NOP         shift, and go to state 96
    NOT         shift, and go to state 97
    NOTS        shift, and go to state 98
    OR          shift, and go to state 99
    ORS         shift, and go to state 100
    R2A         shift, and go to state 101
    R2G         shift, and go to state 102
    R2GU16U8    shift, and go to state 103
    RCP         shift, and go to state 104
    RCP32       shift, and go to state 105
    RET         shift, and go to state 106
    RRO         shift, and go to state 107
    RSQ         shift, and go to state 108
    SIN         shift, and go to state 109
    SHL         shift, and go to state 110
    SHR         shift, and go to state 111
    SSY         shift, and go to state 112
    XOR         shift, and go to state 113
    XORS        shift, and go to state 114
    S2R         shift, and go to state 115
    SASS_LD     shift, and go to state 116
    STS         shift, and go to state 117
    LDS         shift, and go to state 118
    SASS_ST     shift, and go to state 119
    IMIN        shift, and go to state 120
    IMAX        shift, and go to state 121
    A2R         shift, and go to state 122
    FMAX        shift, and go to state 123
    FMIN        shift, and go to state 124
    TEX         shift, and go to state 125
    TEX32       shift, and go to state 126
    C2R         shift, and go to state 127
    EXIT        shift, and go to state 128
    BRK         shift, and go to state 131
    R2C         shift, and go to state 132
    VOTE        shift, and go to state 134

    simpleInstructions  go to state 184


State 145

  120 pbkInstruction: PBK $@3 . HEXLITERAL

    HEXLITERAL  shift, and go to state 185


State 146

   25 baseInstruction: GATOM DOT . simpleInstructions
   27 simpleInstructions: . ADA
   28                   | . AND
   29                   | . ANDS
   30                   | . BRX
   31                   | . COS
   32                   | . DADD
   33                   | . DMIN
   34                   | . DMAX
   35                   | . DFMA
   36                   | . DMUL
   37                   | . EX2
   38                   | . F2F
   39                   | . F2I
   40                   | . FADD
   41                   | . FADD32
   42                   | . FADD32I
   43                   | . FMAD
   44                   | . FMAD32I
   45                   | . FMUL
   46                   | . FMUL32
   47                   | . FMUL32I
   48                   | . FSET
   49                   | . DSET
   50                   | . G2R
   51                   | . GLD
   52                   | . GST
   53                   | . I2F
   54                   | . I2I
   55                   | . IADD
   56                   | . IADD32
   57                   | . IADD32I
   58                   | . IMAD
   59                   | . ISAD
   60                   | . IMAD24
   61                   | . IMAD32I
   62                   | . IMAD32
   63                   | . IMUL
   64                   | . IMUL24
   65                   | . IMUL24H
   66                   | . IMULS24
   67                   | . IMUL32
   68                   | . IMUL32S24
   69                   | . IMUL32I
   70                   | . IMUL32I24
   71                   | . IMUL32IS24
   72                   | . IMUL32U24
   73                   | . ISET
   74                   | . LG2
   75                   | . LLD
   76                   | . LST
   77                   | . MOV
   78                   | . MOV32
   79                   | . MVC
   80                   | . MVI
   81                   | . NOP
   82                   | . NOT
   83                   | . NOTS
   84                   | . OR
   85                   | . ORS
   86                   | . R2A
   87                   | . R2G
   88                   | . R2GU16U8
   89                   | . RCP
   90                   | . RCP32
   91                   | . RET
   92                   | . RRO
   93                   | . RSQ
   94                   | . SHL
   95                   | . SHR
   96                   | . SIN
   97                   | . SSY
   98                   | . XOR
   99                   | . XORS
  100                   | . S2R
  101                   | . SASS_LD
  102                   | . STS
  103                   | . LDS
  104                   | . SASS_ST
  105                   | . EXIT
  106                   | . BAR
  107                   | . IMIN
  108                   | . IMAX
  109                   | . A2R
  110                   | . FMAX
  111                   | . FMIN
  112                   | . TEX
  113                   | . TEX32
  114                   | . C2R
  115                   | . BRK
  116                   | . R2C
  117                   | . IADDCARRY
  118                   | . VOTE

    BAR         shift, and go to state 38
    ADA         shift, and go to state 39
    AND         shift, and go to state 40
    ANDS        shift, and go to state 41
    BRX         shift, and go to state 43
    COS         shift, and go to state 45
    DADD        shift, and go to state 46
    DMIN        shift, and go to state 47
    DMAX        shift, and go to state 48
    DFMA        shift, and go to state 49
    DMUL        shift, and go to state 50
    EX2         shift, and go to state 51
    F2F         shift, and go to state 52
    F2I         shift, and go to state 53
    FADD        shift, and go to state 54
    FADD32      shift, and go to state 55
    FADD32I     shift, and go to state 56
    FMAD        shift, and go to state 57
    FMAD32I     shift, and go to state 58
    FMUL        shift, and go to state 59
    FMUL32      shift, and go to state 60
    FMUL32I     shift, and go to state 61
    FSET        shift, and go to state 62
    DSET        shift, and go to state 63
    G2R         shift, and go to state 64
    GLD         shift, and go to state 65
    GST         shift, and go to state 66
    I2F         shift, and go to state 67
    I2I         shift, and go to state 68
    IADD        shift, and go to state 69
    IADD32      shift, and go to state 70
    IADD32I     shift, and go to state 71
    IMAD        shift, and go to state 72
    ISAD        shift, and go to state 73
    IMAD24      shift, and go to state 74
    IMAD32I     shift, and go to state 75
    IMAD32      shift, and go to state 76
    IADDCARRY   shift, and go to state 77
    IMUL        shift, and go to state 78
    IMUL24      shift, and go to state 79
    IMUL24H     shift, and go to state 80
    IMULS24     shift, and go to state 81
    IMUL32      shift, and go to state 82
    IMUL32S24   shift, and go to state 83
    IMUL32U24   shift, and go to state 84
    IMUL32I     shift, and go to state 85
    IMUL32I24   shift, and go to state 86
    IMUL32IS24  shift, and go to state 87
    ISET        shift, and go to state 88
    LG2         shift, and go to state 89
    LLD         shift, and go to state 90
    LST         shift, and go to state 91
    MOV         shift, and go to state 92
    MOV32       shift, and go to state 93
    MVC         shift, and go to state 94
    MVI         shift, and go to state 95
    NOP         shift, and go to state 96
    NOT         shift, and go to state 97
    NOTS        shift, and go to state 98
    OR          shift, and go to state 99
    ORS         shift, and go to state 100
    R2A         shift, and go to state 101
    R2G         shift, and go to state 102
    R2GU16U8    shift, and go to state 103
    RCP         shift, and go to state 104
    RCP32       shift, and go to state 105
    RET         shift, and go to state 106
    RRO         shift, and go to state 107
    RSQ         shift, and go to state 108
    SIN         shift, and go to state 109
    SHL         shift, and go to state 110
    SHR         shift, and go to state 111
    SSY         shift, and go to state 112
    XOR         shift, and go to state 113
    XORS        shift, and go to state 114
    S2R         shift, and go to state 115
    SASS_LD     shift, and go to state 116
    STS         shift, and go to state 117
    LDS         shift, and go to state 118
    SASS_ST     shift, and go to state 119
    IMIN        shift, and go to state 120
    IMAX        shift, and go to state 121
    A2R         shift, and go to state 122
    FMAX        shift, and go to state 123
    FMIN        shift, and go to state 124
    TEX         shift, and go to state 125
    TEX32       shift, and go to state 126
    C2R         shift, and go to state 127
    EXIT        shift, and go to state 128
    BRK         shift, and go to state 131
    R2C         shift, and go to state 132
    VOTE        shift, and go to state 134

    simpleInstructions  go to state 186


State 147

  132 modifier: DOTBEXT .

    $default  reduce using rule 132 (modifier)


State 148

  133 modifier: DOTS .

    $default  reduce using rule 133 (modifier)


State 149

  134 modifier: DOTSFU .

    $default  reduce using rule 134 (modifier)


State 150

  135 modifier: DOTTRUNC .

    $default  reduce using rule 135 (modifier)


State 151

  136 modifier: DOTCEIL .

    $default  reduce using rule 136 (modifier)


State 152

  137 modifier: DOTFLOOR .

    $default  reduce using rule 137 (modifier)


State 153

  142 modifier: DOTIR .

    $default  reduce using rule 142 (modifier)


State 154

  143 modifier: DOTUN .

    $default  reduce using rule 143 (modifier)


State 155

  144 modifier: DOTNODEP .

    $default  reduce using rule 144 (modifier)


State 156

  145 modifier: DOTANY .

    $default  reduce using rule 145 (modifier)


State 157

  146 modifier: DOTALL .

    $default  reduce using rule 146 (modifier)


State 158

  147 opTypes: DOTF16 .

    $default  reduce using rule 147 (opTypes)


State 159

  148 opTypes: DOTF32 .

    $default  reduce using rule 148 (opTypes)


State 160

  149 opTypes: DOTF64 .

    $default  reduce using rule 149 (opTypes)


State 161

  150 opTypes: DOTS8 .

    $default  reduce using rule 150 (opTypes)


State 162

  151 opTypes: DOTS16 .

    $default  reduce using rule 151 (opTypes)


State 163

  152 opTypes: DOTS32 .

    $default  reduce using rule 152 (opTypes)


State 164

  153 opTypes: DOTS64 .

    $default  reduce using rule 153 (opTypes)


State 165

  154 opTypes: DOTS128 .

    $default  reduce using rule 154 (opTypes)


State 166

  155 opTypes: DOTU8 .

    $default  reduce using rule 155 (opTypes)


State 167

  156 opTypes: DOTU16 .

    $default  reduce using rule 156 (opTypes)


State 168

  157 opTypes: DOTU32 .

    $default  reduce using rule 157 (opTypes)


State 169

  158 opTypes: DOTU24 .

    $default  reduce using rule 158 (opTypes)


State 170

  159 opTypes: DOTU64 .

    $default  reduce using rule 159 (opTypes)


State 171

  160 opTypes: DOTHI .

    $default  reduce using rule 160 (opTypes)


State 172

  138 modifier: DOTX .

    $default  reduce using rule 138 (modifier)


State 173

  139 modifier: DOTE .

    $default  reduce using rule 139 (modifier)


State 174

  140 modifier: DOTRED .

    $default  reduce using rule 140 (modifier)


State 175

  141 modifier: DOTPOPC .

    $default  reduce using rule 141 (modifier)


State 176

   21 assemblyInstruction: baseInstruction modifierList . operandList
  162 operandList: . operandList $@8 operand
  163            | . %empty

    $default  reduce using rule 163 (operandList)

    operandList  go to state 187


State 177

  129 modifierList: . modifier modifierList
  129             | modifier . modifierList
  130             | . %empty  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, NEWLINE, SEMICOLON, OSQBRACKET]
  131 modifier: . opTypes
  132         | . DOTBEXT
  133         | . DOTS
  134         | . DOTSFU
  135         | . DOTTRUNC
  136         | . DOTCEIL
  137         | . DOTFLOOR
  138         | . DOTX
  139         | . DOTE
  140         | . DOTRED
  141         | . DOTPOPC
  142         | . DOTIR
  143         | . DOTUN
  144         | . DOTNODEP
  145         | . DOTANY
  146         | . DOTALL
  147 opTypes: . DOTF16
  148        | . DOTF32
  149        | . DOTF64
  150        | . DOTS8
  151        | . DOTS16
  152        | . DOTS32
  153        | . DOTS64
  154        | . DOTS128
  155        | . DOTU8
  156        | . DOTU16
  157        | . DOTU32
  158        | . DOTU24
  159        | . DOTU64
  160        | . DOTHI

    DOTBEXT   shift, and go to state 147
    DOTS      shift, and go to state 148
    DOTSFU    shift, and go to state 149
    DOTTRUNC  shift, and go to state 150
    DOTCEIL   shift, and go to state 151
    DOTFLOOR  shift, and go to state 152
    DOTIR     shift, and go to state 153
    DOTUN     shift, and go to state 154
    DOTNODEP  shift, and go to state 155
    DOTANY    shift, and go to state 156
    DOTALL    shift, and go to state 157
    DOTF16    shift, and go to state 158
    DOTF32    shift, and go to state 159
    DOTF64    shift, and go to state 160
    DOTS8     shift, and go to state 161
    DOTS16    shift, and go to state 162
    DOTS32    shift, and go to state 163
    DOTS64    shift, and go to state 164
    DOTS128   shift, and go to state 165
    DOTU8     shift, and go to state 166
    DOTU16    shift, and go to state 167
    DOTU32    shift, and go to state 168
    DOTU24    shift, and go to state 169
    DOTU64    shift, and go to state 170
    DOTHI     shift, and go to state 171
    DOTX      shift, and go to state 172
    DOTE      shift, and go to state 173
    DOTRED    shift, and go to state 174
    DOTPOPC   shift, and go to state 175

    $default  reduce using rule 130 (modifierList)

    modifierList  go to state 188
    modifier      go to state 177
    opTypes       go to state 178


State 178

  131 modifier: opTypes .

    $default  reduce using rule 131 (modifier)


State 179

  203 instructionPredicate: PREDREGISTER3 . predicateModifier
  204                     | PREDREGISTER3 .  [HEXLITERAL, RIGHTBRACKET]
  210 predicateModifier: . DOTEQ
  211                  | . DOTEQU
  212                  | . DOTFALSE
  213                  | . DOTGE
  214                  | . DOTGEU
  215                  | . DOTGT
  216                  | . DOTGTU
  217                  | . DOTLE
  218                  | . DOTLEU
  219                  | . DOTLT
  220                  | . DOTLTU
  221                  | . DOTNE
  222                  | . DOTNEU
  223                  | . DOTNSF
  224                  | . DOTSF
  225                  | . DOTCARRY

    DOTEQ     shift, and go to state 189
    DOTEQU    shift, and go to state 190
    DOTFALSE  shift, and go to state 191
    DOTGE     shift, and go to state 192
    DOTGEU    shift, and go to state 193
    DOTGT     shift, and go to state 194
    DOTGTU    shift, and go to state 195
    DOTLE     shift, and go to state 196
    DOTLEU    shift, and go to state 197
    DOTLT     shift, and go to state 198
    DOTLTU    shift, and go to state 199
    DOTNE     shift, and go to state 200
    DOTNEU    shift, and go to state 201
    DOTNSF    shift, and go to state 202
    DOTSF     shift, and go to state 203
    DOTCARRY  shift, and go to state 204

    $default  reduce using rule 204 (instructionPredicate)

    predicateModifier  go to state 205


State 180

  122 branchInstructions: BRA $@4 instructionPredicate . HEXLITERAL

    HEXLITERAL  shift, and go to state 206


State 181

  124 branchInstructions: BRA $@5 HEXLITERAL .

    $default  reduce using rule 124 (branchInstructions)


State 182

  126 branchInstructions: CAL $@6 HEXLITERAL .

    $default  reduce using rule 126 (branchInstructions)


State 183

  128 branchInstructions: CAL $@7 DOTNOINC . HEXLITERAL

    HEXLITERAL  shift, and go to state 207


State 184

   24 baseInstruction: GRED DOT simpleInstructions .

    $default  reduce using rule 24 (baseInstruction)


State 185

  120 pbkInstruction: PBK $@3 HEXLITERAL .

    $default  reduce using rule 120 (pbkInstruction)


State 186

   25 baseInstruction: GATOM DOT simpleInstructions .

    $default  reduce using rule 25 (baseInstruction)


State 187

   21 assemblyInstruction: baseInstruction modifierList operandList .  [NEWLINE, SEMICOLON]
  161 $@8: . %empty  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, OSQBRACKET]
  162 operandList: operandList . $@8 operand

    NEWLINE    reduce using rule 21 (assemblyInstruction)
    SEMICOLON  reduce using rule 21 (assemblyInstruction)
    $default   reduce using rule 161 ($@8)

    $@8  go to state 208


State 188

  129 modifierList: modifier modifierList .

    $default  reduce using rule 129 (modifierList)


State 189

  210 predicateModifier: DOTEQ .

    $default  reduce using rule 210 (predicateModifier)


State 190

  211 predicateModifier: DOTEQU .

    $default  reduce using rule 211 (predicateModifier)


State 191

  212 predicateModifier: DOTFALSE .

    $default  reduce using rule 212 (predicateModifier)


State 192

  213 predicateModifier: DOTGE .

    $default  reduce using rule 213 (predicateModifier)


State 193

  214 predicateModifier: DOTGEU .

    $default  reduce using rule 214 (predicateModifier)


State 194

  215 predicateModifier: DOTGT .

    $default  reduce using rule 215 (predicateModifier)


State 195

  216 predicateModifier: DOTGTU .

    $default  reduce using rule 216 (predicateModifier)


State 196

  217 predicateModifier: DOTLE .

    $default  reduce using rule 217 (predicateModifier)


State 197

  218 predicateModifier: DOTLEU .

    $default  reduce using rule 218 (predicateModifier)


State 198

  219 predicateModifier: DOTLT .

    $default  reduce using rule 219 (predicateModifier)


State 199

  220 predicateModifier: DOTLTU .

    $default  reduce using rule 220 (predicateModifier)


State 200

  221 predicateModifier: DOTNE .

    $default  reduce using rule 221 (predicateModifier)


State 201

  222 predicateModifier: DOTNEU .

    $default  reduce using rule 222 (predicateModifier)


State 202

  223 predicateModifier: DOTNSF .

    $default  reduce using rule 223 (predicateModifier)


State 203

  224 predicateModifier: DOTSF .

    $default  reduce using rule 224 (predicateModifier)


State 204

  225 predicateModifier: DOTCARRY .

    $default  reduce using rule 225 (predicateModifier)


State 205

  203 instructionPredicate: PREDREGISTER3 predicateModifier .

    $default  reduce using rule 203 (instructionPredicate)


State 206

  122 branchInstructions: BRA $@4 instructionPredicate HEXLITERAL .

    $default  reduce using rule 122 (branchInstructions)


State 207

  128 branchInstructions: CAL $@7 DOTNOINC HEXLITERAL .

    $default  reduce using rule 128 (branchInstructions)


State 208

  162 operandList: operandList $@8 . operand
  164 operand: . registerlocation
  165        | . PIPE registerlocation PIPE
  166        | . TILDE registerlocation
  167        | . LEFTBRACKET instructionPredicate RIGHTBRACKET
  168        | . memorylocation opTypes
  169        | . memorylocation
  170        | . immediateValue
  171        | . extraModifier
  172        | . operandPredicate
  173        | . preOperand
  174 registerlocation: . REGISTER regMod
  175                 | . OSQBRACKET REGISTER CSQBRACKET
  176                 | . REGISTERLO
  177                 | . REGISTERHI
  178                 | . SREGISTER
  179                 | . OFFSETREGISTER
  180                 | . PREDREGISTER PREDREGISTER2
  181                 | . PREDREGISTER REGISTER
  184 memorylocation: . SMEMLOCATION
  185               | . ABSSMEMLOCATION
  186               | . GMEMLOCATION
  187               | . CMEMLOCATION
  188               | . LMEMLOCATION
  189 immediateValue: . IDENTIFIER
  190               | . HEXLITERAL
  191 extraModifier: . EQ
  192              | . EQU
  193              | . GE
  194              | . GEU
  195              | . GT
  196              | . GTU
  197              | . LE
  198              | . LEU
  199              | . LT
  200              | . LTU
  201              | . NE
  202              | . NEU
  205 operandPredicate: . PREDREGISTER3 predicateModifier
  206                 | . PREDREGISTER3
  207 preOperand: . EX2
  208           | . SIN
  209           | . COS

    COS              shift, and go to state 209
    EX2              shift, and go to state 210
    SIN              shift, and go to state 211
    EQ               shift, and go to state 212
    EQU              shift, and go to state 213
    GE               shift, and go to state 214
    GEU              shift, and go to state 215
    GT               shift, and go to state 216
    GTU              shift, and go to state 217
    LE               shift, and go to state 218
    LEU              shift, and go to state 219
    LT               shift, and go to state 220
    LTU              shift, and go to state 221
    NE               shift, and go to state 222
    NEU              shift, and go to state 223
    REGISTER         shift, and go to state 224
    REGISTERLO       shift, and go to state 225
    REGISTERHI       shift, and go to state 226
    OFFSETREGISTER   shift, and go to state 227
    PREDREGISTER     shift, and go to state 228
    PREDREGISTER3    shift, and go to state 229
    SREGISTER        shift, and go to state 230
    SMEMLOCATION     shift, and go to state 231
    ABSSMEMLOCATION  shift, and go to state 232
    GMEMLOCATION     shift, and go to state 233
    CMEMLOCATION     shift, and go to state 234
    LMEMLOCATION     shift, and go to state 235
    IDENTIFIER       shift, and go to state 236
    HEXLITERAL       shift, and go to state 237
    LEFTBRACKET      shift, and go to state 238
    PIPE             shift, and go to state 239
    TILDE            shift, and go to state 240
    OSQBRACKET       shift, and go to state 241

    operand           go to state 242
    registerlocation  go to state 243
    memorylocation    go to state 244
    immediateValue    go to state 245
    extraModifier     go to state 246
    operandPredicate  go to state 247
    preOperand        go to state 248


State 209

  209 preOperand: COS .

    $default  reduce using rule 209 (preOperand)


State 210

  207 preOperand: EX2 .

    $default  reduce using rule 207 (preOperand)


State 211

  208 preOperand: SIN .

    $default  reduce using rule 208 (preOperand)


State 212

  191 extraModifier: EQ .

    $default  reduce using rule 191 (extraModifier)


State 213

  192 extraModifier: EQU .

    $default  reduce using rule 192 (extraModifier)


State 214

  193 extraModifier: GE .

    $default  reduce using rule 193 (extraModifier)


State 215

  194 extraModifier: GEU .

    $default  reduce using rule 194 (extraModifier)


State 216

  195 extraModifier: GT .

    $default  reduce using rule 195 (extraModifier)


State 217

  196 extraModifier: GTU .

    $default  reduce using rule 196 (extraModifier)


State 218

  197 extraModifier: LE .

    $default  reduce using rule 197 (extraModifier)


State 219

  198 extraModifier: LEU .

    $default  reduce using rule 198 (extraModifier)


State 220

  199 extraModifier: LT .

    $default  reduce using rule 199 (extraModifier)


State 221

  200 extraModifier: LTU .

    $default  reduce using rule 200 (extraModifier)


State 222

  201 extraModifier: NE .

    $default  reduce using rule 201 (extraModifier)


State 223

  202 extraModifier: NEU .

    $default  reduce using rule 202 (extraModifier)


State 224

  174 registerlocation: REGISTER . regMod
  182 regMod: . DOTCC
  183       | . %empty  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, NEWLINE, SEMICOLON, OSQBRACKET]

    DOTCC  shift, and go to state 249

    $default  reduce using rule 183 (regMod)

    regMod  go to state 250


State 225

  176 registerlocation: REGISTERLO .

    $default  reduce using rule 176 (registerlocation)


State 226

  177 registerlocation: REGISTERHI .

    $default  reduce using rule 177 (registerlocation)


State 227

  179 registerlocation: OFFSETREGISTER .

    $default  reduce using rule 179 (registerlocation)


State 228

  180 registerlocation: PREDREGISTER . PREDREGISTER2
  181                 | PREDREGISTER . REGISTER

    REGISTER       shift, and go to state 251
    PREDREGISTER2  shift, and go to state 252


State 229

  205 operandPredicate: PREDREGISTER3 . predicateModifier
  206                 | PREDREGISTER3 .  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, NEWLINE, SEMICOLON, OSQBRACKET]
  210 predicateModifier: . DOTEQ
  211                  | . DOTEQU
  212                  | . DOTFALSE
  213                  | . DOTGE
  214                  | . DOTGEU
  215                  | . DOTGT
  216                  | . DOTGTU
  217                  | . DOTLE
  218                  | . DOTLEU
  219                  | . DOTLT
  220                  | . DOTLTU
  221                  | . DOTNE
  222                  | . DOTNEU
  223                  | . DOTNSF
  224                  | . DOTSF
  225                  | . DOTCARRY

    DOTEQ     shift, and go to state 189
    DOTEQU    shift, and go to state 190
    DOTFALSE  shift, and go to state 191
    DOTGE     shift, and go to state 192
    DOTGEU    shift, and go to state 193
    DOTGT     shift, and go to state 194
    DOTGTU    shift, and go to state 195
    DOTLE     shift, and go to state 196
    DOTLEU    shift, and go to state 197
    DOTLT     shift, and go to state 198
    DOTLTU    shift, and go to state 199
    DOTNE     shift, and go to state 200
    DOTNEU    shift, and go to state 201
    DOTNSF    shift, and go to state 202
    DOTSF     shift, and go to state 203
    DOTCARRY  shift, and go to state 204

    $default  reduce using rule 206 (operandPredicate)

    predicateModifier  go to state 253


State 230

  178 registerlocation: SREGISTER .

    $default  reduce using rule 178 (registerlocation)


State 231

  184 memorylocation: SMEMLOCATION .

    $default  reduce using rule 184 (memorylocation)


State 232

  185 memorylocation: ABSSMEMLOCATION .

    $default  reduce using rule 185 (memorylocation)


State 233

  186 memorylocation: GMEMLOCATION .

    $default  reduce using rule 186 (memorylocation)


State 234

  187 memorylocation: CMEMLOCATION .

    $default  reduce using rule 187 (memorylocation)


State 235

  188 memorylocation: LMEMLOCATION .

    $default  reduce using rule 188 (memorylocation)


State 236

  189 immediateValue: IDENTIFIER .

    $default  reduce using rule 189 (immediateValue)


State 237

  190 immediateValue: HEXLITERAL .

    $default  reduce using rule 190 (immediateValue)


State 238

  167 operand: LEFTBRACKET . instructionPredicate RIGHTBRACKET
  203 instructionPredicate: . PREDREGISTER3 predicateModifier
  204                     | . PREDREGISTER3

    PREDREGISTER3  shift, and go to state 179

    instructionPredicate  go to state 254


State 239

  165 operand: PIPE . registerlocation PIPE
  174 registerlocation: . REGISTER regMod
  175                 | . OSQBRACKET REGISTER CSQBRACKET
  176                 | . REGISTERLO
  177                 | . REGISTERHI
  178                 | . SREGISTER
  179                 | . OFFSETREGISTER
  180                 | . PREDREGISTER PREDREGISTER2
  181                 | . PREDREGISTER REGISTER

    REGISTER        shift, and go to state 224
    REGISTERLO      shift, and go to state 225
    REGISTERHI      shift, and go to state 226
    OFFSETREGISTER  shift, and go to state 227
    PREDREGISTER    shift, and go to state 228
    SREGISTER       shift, and go to state 230
    OSQBRACKET      shift, and go to state 241

    registerlocation  go to state 255


State 240

  166 operand: TILDE . registerlocation
  174 registerlocation: . REGISTER regMod
  175                 | . OSQBRACKET REGISTER CSQBRACKET
  176                 | . REGISTERLO
  177                 | . REGISTERHI
  178                 | . SREGISTER
  179                 | . OFFSETREGISTER
  180                 | . PREDREGISTER PREDREGISTER2
  181                 | . PREDREGISTER REGISTER

    REGISTER        shift, and go to state 224
    REGISTERLO      shift, and go to state 225
    REGISTERHI      shift, and go to state 226
    OFFSETREGISTER  shift, and go to state 227
    PREDREGISTER    shift, and go to state 228
    SREGISTER       shift, and go to state 230
    OSQBRACKET      shift, and go to state 241

    registerlocation  go to state 256


State 241

  175 registerlocation: OSQBRACKET . REGISTER CSQBRACKET

    REGISTER  shift, and go to state 257


State 242

  162 operandList: operandList $@8 operand .

    $default  reduce using rule 162 (operandList)


State 243

  164 operand: registerlocation .

    $default  reduce using rule 164 (operand)


State 244

  147 opTypes: . DOTF16
  148        | . DOTF32
  149        | . DOTF64
  150        | . DOTS8
  151        | . DOTS16
  152        | . DOTS32
  153        | . DOTS64
  154        | . DOTS128
  155        | . DOTU8
  156        | . DOTU16
  157        | . DOTU32
  158        | . DOTU24
  159        | . DOTU64
  160        | . DOTHI
  168 operand: memorylocation . opTypes
  169        | memorylocation .  [COS, EX2, SIN, EQ, EQU, GE, GEU, GT, GTU, LE, LEU, LT, LTU, NE, NEU, REGISTER, REGISTERLO, REGISTERHI, OFFSETREGISTER, PREDREGISTER, PREDREGISTER3, SREGISTER, SMEMLOCATION, ABSSMEMLOCATION, GMEMLOCATION, CMEMLOCATION, LMEMLOCATION, IDENTIFIER, HEXLITERAL, LEFTBRACKET, PIPE, TILDE, NEWLINE, SEMICOLON, OSQBRACKET]

    DOTF16   shift, and go to state 158
    DOTF32   shift, and go to state 159
    DOTF64   shift, and go to state 160
    DOTS8    shift, and go to state 161
    DOTS16   shift, and go to state 162
    DOTS32   shift, and go to state 163
    DOTS64   shift, and go to state 164
    DOTS128  shift, and go to state 165
    DOTU8    shift, and go to state 166
    DOTU16   shift, and go to state 167
    DOTU32   shift, and go to state 168
    DOTU24   shift, and go to state 169
    DOTU64   shift, and go to state 170
    DOTHI    shift, and go to state 171

    $default  reduce using rule 169 (operand)

    opTypes  go to state 258


State 245

  170 operand: immediateValue .

    $default  reduce using rule 170 (operand)


State 246

  171 operand: extraModifier .

    $default  reduce using rule 171 (operand)


State 247

  172 operand: operandPredicate .

    $default  reduce using rule 172 (operand)


State 248

  173 operand: preOperand .

    $default  reduce using rule 173 (operand)


State 249

  182 regMod: DOTCC .

    $default  reduce using rule 182 (regMod)


State 250

  174 registerlocation: REGISTER regMod .

    $default  reduce using rule 174 (registerlocation)


State 251

  181 registerlocation: PREDREGISTER REGISTER .

    $default  reduce using rule 181 (registerlocation)


State 252

  180 registerlocation: PREDREGISTER PREDREGISTER2 .

    $default  reduce using rule 180 (registerlocation)


State 253

  205 operandPredicate: PREDREGISTER3 predicateModifier .

    $default  reduce using rule 205 (operandPredicate)


State 254

  167 operand: LEFTBRACKET instructionPredicate . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 259


State 255

  165 operand: PIPE registerlocation . PIPE

    PIPE  shift, and go to state 260


State 256

  166 operand: TILDE registerlocation .

    $default  reduce using rule 166 (operand)


State 257

  175 registerlocation: OSQBRACKET REGISTER . CSQBRACKET

    CSQBRACKET  shift, and go to state 261


State 258

  168 operand: memorylocation opTypes .

    $default  reduce using rule 168 (operand)


State 259

  167 operand: LEFTBRACKET instructionPredicate RIGHTBRACKET .

    $default  reduce using rule 167 (operand)


State 260

  165 operand: PIPE registerlocation PIPE .

    $default  reduce using rule 165 (operand)


State 261

  175 registerlocation: OSQBRACKET REGISTER CSQBRACKET .

    $default  reduce using rule 175 (registerlocation)
